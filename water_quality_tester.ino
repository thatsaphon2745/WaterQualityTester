#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "IoT TDS Meter"
  https://create.arduino.cc/cloud/things/a8128a86-ec66-4926-a475-baa36c16c643

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float ecvalue;
  float tds;
  float temperature;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include "thingProperties.h"
#include <Arduino.h>
#include <Wire.h>
#include <WiFi.h>
#include <OneWire.h>
#include <DallasTemperature.h>
#include <DFRobot_ESP_EC.h>
#include <WiFi.h>
#include <HTTPClient.h>


#define ONE_WIRE_BUS 18                // this is the gpio pin 18 on esp32.
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);

DFRobot_ESP_EC ec;
#define ADS1115_ADDRESS 0x48
float voltage;

float value1;
float value2;
float value3;


String server = "http://maker.ifttt.com";
String eventName = "meter";
String IFTTT_Key = "cXLJrxENWB8yvgTnmRfBQq";
String IFTTTUrl="https://maker.ifttt.com/trigger/meter/with/key/cXLJrxENWB8yvgTnmRfBQq";

int16_t readADS1115(uint8_t channel) {
  // กำหนดการตั้งค่าของ ADS1115
  Wire.beginTransmission(ADS1115_ADDRESS);
  Wire.write(0x01);  // เลือกทะเบียน Config
  Wire.write(0xC3);  // 11000011: ทำการแปลงข้อมูลจากแชนแนล A0 และในโหมด Single Shot
  Wire.write(0x83);  // 10000011: set gain x1  11-9: 001
  Wire.endTransmission();

  // รอ ADS1115 ทำการแปลง
  delay(100);

  // อ่านค่าจาก ADS1115
  Wire.beginTransmission(ADS1115_ADDRESS);
  Wire.write(0x00);  // เลือกทะเบียน Conversion
  Wire.endTransmission();
  Wire.requestFrom(ADS1115_ADDRESS, 2);

  if (Wire.available() >= 2) {
    uint8_t msb = Wire.read();
    uint8_t lsb = Wire.read();
    int16_t result = (msb << 8) | lsb;
    return result;
  } else {
    return -1;  // อ่านข้อมูลไม่สำเร็จ
  }
}
//ฟัง์ชันส่งข้อมูลไปยัง google sheet
void sendDataToSheet(void) {
  String url = server + "/trigger/" + eventName + "/with/key/" + IFTTT_Key + "?value1=" + String((float)value1) + "&value2=" + String((float)value2) + "&value3=" + String((float)value3);
  Serial.println(url);
  //Start to send data to IFTTT
  HTTPClient http;
  Serial.print("[HTTP] begin...\n");
  http.begin(url);  //HTTP

  Serial.print("[HTTP] GET...\n");
  // start connection and send HTTP header
  int httpCode = http.GET();
  // httpCode will be negative on error
  if (httpCode > 0) {
    // HTTP header has been send and Server response header has been handled
    Serial.printf("[HTTP] GET... code: %d\n", httpCode);
    // file found at server
    if (httpCode == HTTP_CODE_OK) {
      String payload = http.getString();
      Serial.println(payload);
    }
  } else {
    Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
  }
  http.end();
}

void setup() {
  Serial.begin(115200);
  
  Wire.begin();

  sensors.begin();
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  //voltage = ads.readADC_SingleEnded(0) / 10;
  sensors.requestTemperatures();
  temperature = sensors.getTempCByIndex(0);  // read your temperature sensor to execute temperature compensation
  
  int16_t adcValue = readADS1115(0);  // อ่านค่าจากช่อง A0
  if (adcValue != -1) {
    voltage = adcValue /10;  // คำนวณค่าแรงดัน
    Serial.print("Voltage: ");
    Serial.println(voltage, 2);
  } else {
    Serial.println("Error reading ADS1115");
  }
  
  ecvalue = ec.readEC(voltage, temperature); // convert voltage to EC with temperature compensation
  tds = ((ecvalue * 1000) / 2);

  Serial.print("Temperature:");
  Serial.print(temperature, 2);
  Serial.println("ºC");

  Serial.print("TDS:");
  Serial.print(tds, 2);
  Serial.println("PPM");

  Serial.print("EC:");
  Serial.println(ecvalue, 2);
  value1 = temperature;
  value2 = ecvalue;
  value3 = tds;
  sendDataToSheet();
  delay(500);
}

